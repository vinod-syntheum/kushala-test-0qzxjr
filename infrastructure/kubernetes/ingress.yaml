apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: restaurant-platform-ingress
  namespace: restaurant-platform
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Rate limiting configuration
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "2"
    
    # Timeout configurations
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
    
    # Monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

spec:
  # TLS configuration
  tls:
    - hosts:
        - "*.restaurant-platform.com"
      secretName: restaurant-platform-tls

  # Routing rules
  rules:
    # API domain routing
    - host: api.restaurant-platform.com
      http:
        paths:
          # Health check endpoint
          - path: /health
            pathType: Exact
            backend:
              service:
                name: backend-service
                port:
                  number: 80
          # API routes
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 80

    # Wildcard domain for restaurant subdomains
    - host: "*.restaurant-platform.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80